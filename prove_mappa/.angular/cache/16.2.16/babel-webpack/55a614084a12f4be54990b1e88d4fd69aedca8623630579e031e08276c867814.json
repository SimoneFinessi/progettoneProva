{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrimesService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://127.0.0.1:5000/gdf';\n  }\n  // Funzione per ottenere i crimini senza parametri\n  getCrimes() {\n    return this.http.get(this.apiUrl).pipe(catchError(error => {\n      console.error('Errore durante il recupero dei dati GeoJSON:', error);\n      throw error;\n    }));\n  }\n  static {\n    this.ɵfac = function CrimesService_Factory(t) {\n      return new (t || CrimesService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CrimesService,\n      factory: CrimesService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["catchError","CrimesService","constructor","http","apiUrl","getCrimes","get","pipe","error","console","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\simon\\Desktop\\Mappa_dati\\prove_Safezone\\prove_mappa\\src\\app\\crimes.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n// Definisci il tipo di dato per i crimini\r\nexport interface Crime {\r\n  id: number;\r\n  type: string;\r\n  date: string;\r\n  location: string;\r\n  // Aggiungi altri campi pertinenti qui\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrimesService {\r\n  private apiUrl = 'http://127.0.0.1:5000/gdf';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Funzione per ottenere i crimini senza parametri\r\n  getCrimes(): Observable<any> {\r\n    return this.http.get<any>(this.apiUrl).pipe(\r\n      catchError(error => {\r\n        console.error('Errore durante il recupero dei dati GeoJSON:', error);\r\n        throw error;\r\n      })\r\n    );\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,UAAU,QAAQ,gBAAgB;;;AAc3C,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,2BAA2B;EAEJ;EAExC;EACAC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,IAAI,CAACF,MAAM,CAAC,CAACG,IAAI,CACzCP,UAAU,CAACQ,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpE,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACH;;;uBAbWP,aAAa,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbZ,aAAa;MAAAa,OAAA,EAAbb,aAAa,CAAAc,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}