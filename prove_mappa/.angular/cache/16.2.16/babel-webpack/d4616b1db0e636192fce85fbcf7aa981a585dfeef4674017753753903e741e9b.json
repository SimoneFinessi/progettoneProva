{"ast":null,"code":"import * as L from 'leaflet'; // Importa Leaflet\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./crimes.service\";\nexport class AppComponent {\n  constructor(crimesService) {\n    this.crimesService = crimesService;\n    this.geojsonData = {\n      \"type\": \"FeatureCollection\",\n      \"features\": [{\n        \"id\": \"1.0\",\n        \"type\": \"Feature\",\n        \"properties\": {\n          \"pri_neigh\": \"Printers Row\",\n          \"sec_neigh\": \"PRINTERS ROW\",\n          \"shape_area\": \"2162137.97139\",\n          \"shape_len\": \"6864.247156\",\n          \"index_right\": 1,\n          \"crime_count\": 2\n        },\n        \"geometry\": {\n          \"type\": \"MultiPolygon\",\n          \"coordinates\": [[[[-87.62760697485348, 41.8743709778537], [-87.62759525663328, 41.87386171244117], [-87.62756611032268, 41.87309193343395], [-87.6275551301491, 41.87280194101277], [-87.62754038267394, 41.8723026159864], [-87.6275257358244, 41.87180670894443], [-87.62751740010026, 41.87152447340548], [-87.62749380061312, 41.870533289913496], [-87.62748640976554, 41.87022285721285], [-87.62747968351995, 41.8698699731487], [-87.62746758964475, 41.86923545315862], [-87.62746178584436, 41.86893095552231], [-87.62741867651467, 41.86741358880028], [-87.62776525665168, 41.86740884836574], [-87.62791651412788, 41.86740677917382], [-87.62835789379616, 41.867400574187975], [-87.62847483044938, 41.86739872168006], [-87.6285016555064, 41.86739829657602], [-87.62886489441746, 41.867392540895025], [-87.6294510227246, 41.86738627247538], [-87.62994146063357, 41.86738130883445], [-87.63043520045348, 41.867373985964946], [-87.63045643033234, 41.86832408508193], [-87.63046103823288, 41.86849676575636], [-87.63047842774165, 41.86914840420451], [-87.63049175239173, 41.86964771496229], [-87.63049478033787, 41.86968430855481], [-87.63051202720345, 41.8698927483438], [-87.63055740862784, 41.870441204350946], [-87.63056128061226, 41.87050901480099], [-87.63056510977249, 41.870576076357324], [-87.63057023511439, 41.87077857857081], [-87.63057420023388, 41.8709260784126], [-87.63057428682792, 41.870929267757866], [-87.63058149972416, 41.87119486693879], [-87.63058916097859, 41.87146415217918], [-87.63060278276006, 41.8719334194333], [-87.63061066642632, 41.87223168661656], [-87.6306169562931, 41.87246964964144], [-87.630621108501, 41.87264366027951], [-87.63062301810568, 41.87272407838625], [-87.63062680325942, 41.8728578561184], [-87.63063080101777, 41.87297892928771], [-87.63063388056597, 41.87307321326662], [-87.63063923702379, 41.87323449767777], [-87.63064223866382, 41.87336945062947], [-87.63064686470452, 41.87359738857438], [-87.63065906168319, 41.87401239319246], [-87.63066229700475, 41.87411274261591], [-87.63067547794128, 41.87452163354843], [-87.63028379674365, 41.87452623421518], [-87.62966890774102, 41.874534235064694], [-87.6294635167731, 41.87453690670954], [-87.62923044428344, 41.874539213980704], [-87.62920969690175, 41.874539419377946], [-87.62891739196219, 41.874542312338946], [-87.62870043471254, 41.874544998116875], [-87.6286855987505, 41.87454518151181], [-87.62827705848584, 41.87455023802575], [-87.62796784305239, 41.87455500774031], [-87.62766945095747, 41.87455282499508], [-87.62766825002093, 41.8745528159692], [-87.62761115198867, 41.87455239842161], [-87.62760697485348, 41.8743709778537]]]]\n        }\n      }]\n    }; // Dati GeoJSON che contengono sia la geometria che il numero di crimini\n  }\n\n  ngOnInit() {\n    this.initMap();\n    this.loadData(); // Carica il file GeoJSON\n  }\n  // Funzione per inizializzare la mappa\n  initMap() {\n    this.map = L.map('map', {\n      center: [41.816813771373916, -87.60670812560372],\n      zoom: 14\n    });\n    // Aggiungi il layer di base di OpenStreetMap\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(this.map);\n  }\n  // Funzione per caricare i dati (crimini e distretti) da un file GeoJSON\n  loadData() {\n    this.crimesService.getCrimes().subscribe(data => {\n      console.log('Dati GeoJSON ricevuti:', data);\n      //this.geojsonData = data;\n      // Aggiungi i distretti e i crimini alla mappa\n      this.addDistrictsToMap(this.geojsonData);\n    }, error => {\n      console.error('Errore nel recupero dei dati:', error);\n    });\n  }\n  // Funzione per aggiungere i distretti con il numero di crimini alla mappa\n  addDistrictsToMap(data) {\n    L.geoJSON(data, {\n      style: {\n        color: 'blue',\n        weight: 2,\n        opacity: 1 // Border opacity\n      },\n\n      onEachFeature: (feature, layer) => {\n        // Check for the required properties to avoid undefined errors\n        const neighborhood = feature.properties?.pri_neigh || \"Unknown\";\n        const crimeCount = feature.properties?.crime_count || 0;\n        layer.bindPopup(`\n          <strong>${neighborhood}</strong><br/>\n          Crimini: ${crimeCount}`);\n      }\n    }).addTo(this.map); // Add to map\n  }\n\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.CrimesService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 1,\n      vars: 0,\n      consts: [[\"id\", \"map\", 2, \"height\", \"500px\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", 0);\n        }\n      },\n      styles: [\"#map[_ngcontent-%COMP%] {\\n    height: 100%;\\n    width: 100%;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osV0FBVztFQUNiIiwic291cmNlc0NvbnRlbnQiOlsiI21hcCB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["L","AppComponent","constructor","crimesService","geojsonData","ngOnInit","initMap","loadData","map","center","zoom","tileLayer","attribution","addTo","getCrimes","subscribe","data","console","log","addDistrictsToMap","error","geoJSON","style","color","weight","opacity","onEachFeature","feature","layer","neighborhood","properties","pri_neigh","crimeCount","crime_count","bindPopup","i0","ɵɵdirectiveInject","i1","CrimesService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement"],"sources":["C:\\Users\\simon\\Desktop\\Mappa_dati\\prove_Safezone\\prove_mappa\\src\\app\\app.component.ts","C:\\Users\\simon\\Desktop\\Mappa_dati\\prove_Safezone\\prove_mappa\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CrimesService } from './crimes.service';\r\nimport * as L from 'leaflet';  // Importa Leaflet\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  geojsonData= {\r\n    \"type\": \"FeatureCollection\",\r\n    \"features\": [\r\n        {\r\n            \"id\": \"1.0\",\r\n            \"type\": \"Feature\",\r\n            \"properties\": {\r\n                \"pri_neigh\": \"Printers Row\",\r\n                \"sec_neigh\": \"PRINTERS ROW\",\r\n                \"shape_area\": \"2162137.97139\",\r\n                \"shape_len\": \"6864.247156\",\r\n                \"index_right\": 1,\r\n                \"crime_count\": 2\r\n            },\r\n            \"geometry\": {\r\n                \"type\": \"MultiPolygon\",\r\n                \"coordinates\": [\r\n                    [\r\n                        [\r\n                            [\r\n                                -87.62760697485348,\r\n                                41.8743709778537\r\n                            ],\r\n                            [\r\n                                -87.62759525663328,\r\n                                41.87386171244117\r\n                            ],\r\n                            [\r\n                                -87.62756611032268,\r\n                                41.87309193343395\r\n                            ],\r\n                            [\r\n                                -87.6275551301491,\r\n                                41.87280194101277\r\n                            ],\r\n                            [\r\n                                -87.62754038267394,\r\n                                41.8723026159864\r\n                            ],\r\n                            [\r\n                                -87.6275257358244,\r\n                                41.87180670894443\r\n                            ],\r\n                            [\r\n                                -87.62751740010026,\r\n                                41.87152447340548\r\n                            ],\r\n                            [\r\n                                -87.62749380061312,\r\n                                41.870533289913496\r\n                            ],\r\n                            [\r\n                                -87.62748640976554,\r\n                                41.87022285721285\r\n                            ],\r\n                            [\r\n                                -87.62747968351995,\r\n                                41.8698699731487\r\n                            ],\r\n                            [\r\n                                -87.62746758964475,\r\n                                41.86923545315862\r\n                            ],\r\n                            [\r\n                                -87.62746178584436,\r\n                                41.86893095552231\r\n                            ],\r\n                            [\r\n                                -87.62741867651467,\r\n                                41.86741358880028\r\n                            ],\r\n                            [\r\n                                -87.62776525665168,\r\n                                41.86740884836574\r\n                            ],\r\n                            [\r\n                                -87.62791651412788,\r\n                                41.86740677917382\r\n                            ],\r\n                            [\r\n                                -87.62835789379616,\r\n                                41.867400574187975\r\n                            ],\r\n                            [\r\n                                -87.62847483044938,\r\n                                41.86739872168006\r\n                            ],\r\n                            [\r\n                                -87.6285016555064,\r\n                                41.86739829657602\r\n                            ],\r\n                            [\r\n                                -87.62886489441746,\r\n                                41.867392540895025\r\n                            ],\r\n                            [\r\n                                -87.6294510227246,\r\n                                41.86738627247538\r\n                            ],\r\n                            [\r\n                                -87.62994146063357,\r\n                                41.86738130883445\r\n                            ],\r\n                            [\r\n                                -87.63043520045348,\r\n                                41.867373985964946\r\n                            ],\r\n                            [\r\n                                -87.63045643033234,\r\n                                41.86832408508193\r\n                            ],\r\n                            [\r\n                                -87.63046103823288,\r\n                                41.86849676575636\r\n                            ],\r\n                            [\r\n                                -87.63047842774165,\r\n                                41.86914840420451\r\n                            ],\r\n                            [\r\n                                -87.63049175239173,\r\n                                41.86964771496229\r\n                            ],\r\n                            [\r\n                                -87.63049478033787,\r\n                                41.86968430855481\r\n                            ],\r\n                            [\r\n                                -87.63051202720345,\r\n                                41.8698927483438\r\n                            ],\r\n                            [\r\n                                -87.63055740862784,\r\n                                41.870441204350946\r\n                            ],\r\n                            [\r\n                                -87.63056128061226,\r\n                                41.87050901480099\r\n                            ],\r\n                            [\r\n                                -87.63056510977249,\r\n                                41.870576076357324\r\n                            ],\r\n                            [\r\n                                -87.63057023511439,\r\n                                41.87077857857081\r\n                            ],\r\n                            [\r\n                                -87.63057420023388,\r\n                                41.8709260784126\r\n                            ],\r\n                            [\r\n                                -87.63057428682792,\r\n                                41.870929267757866\r\n                            ],\r\n                            [\r\n                                -87.63058149972416,\r\n                                41.87119486693879\r\n                            ],\r\n                            [\r\n                                -87.63058916097859,\r\n                                41.87146415217918\r\n                            ],\r\n                            [\r\n                                -87.63060278276006,\r\n                                41.8719334194333\r\n                            ],\r\n                            [\r\n                                -87.63061066642632,\r\n                                41.87223168661656\r\n                            ],\r\n                            [\r\n                                -87.6306169562931,\r\n                                41.87246964964144\r\n                            ],\r\n                            [\r\n                                -87.630621108501,\r\n                                41.87264366027951\r\n                            ],\r\n                            [\r\n                                -87.63062301810568,\r\n                                41.87272407838625\r\n                            ],\r\n                            [\r\n                                -87.63062680325942,\r\n                                41.8728578561184\r\n                            ],\r\n                            [\r\n                                -87.63063080101777,\r\n                                41.87297892928771\r\n                            ],\r\n                            [\r\n                                -87.63063388056597,\r\n                                41.87307321326662\r\n                            ],\r\n                            [\r\n                                -87.63063923702379,\r\n                                41.87323449767777\r\n                            ],\r\n                            [\r\n                                -87.63064223866382,\r\n                                41.87336945062947\r\n                            ],\r\n                            [\r\n                                -87.63064686470452,\r\n                                41.87359738857438\r\n                            ],\r\n                            [\r\n                                -87.63065906168319,\r\n                                41.87401239319246\r\n                            ],\r\n                            [\r\n                                -87.63066229700475,\r\n                                41.87411274261591\r\n                            ],\r\n                            [\r\n                                -87.63067547794128,\r\n                                41.87452163354843\r\n                            ],\r\n                            [\r\n                                -87.63028379674365,\r\n                                41.87452623421518\r\n                            ],\r\n                            [\r\n                                -87.62966890774102,\r\n                                41.874534235064694\r\n                            ],\r\n                            [\r\n                                -87.6294635167731,\r\n                                41.87453690670954\r\n                            ],\r\n                            [\r\n                                -87.62923044428344,\r\n                                41.874539213980704\r\n                            ],\r\n                            [\r\n                                -87.62920969690175,\r\n                                41.874539419377946\r\n                            ],\r\n                            [\r\n                                -87.62891739196219,\r\n                                41.874542312338946\r\n                            ],\r\n                            [\r\n                                -87.62870043471254,\r\n                                41.874544998116875\r\n                            ],\r\n                            [\r\n                                -87.6286855987505,\r\n                                41.87454518151181\r\n                            ],\r\n                            [\r\n                                -87.62827705848584,\r\n                                41.87455023802575\r\n                            ],\r\n                            [\r\n                                -87.62796784305239,\r\n                                41.87455500774031\r\n                            ],\r\n                            [\r\n                                -87.62766945095747,\r\n                                41.87455282499508\r\n                            ],\r\n                            [\r\n                                -87.62766825002093,\r\n                                41.8745528159692\r\n                            ],\r\n                            [\r\n                                -87.62761115198867,\r\n                                41.87455239842161\r\n                            ],\r\n                            [\r\n                                -87.62760697485348,\r\n                                41.8743709778537\r\n                            ]\r\n                        ]\r\n                    ]\r\n                ]\r\n            }\r\n        }\r\n    ]\r\n}; // Dati GeoJSON che contengono sia la geometria che il numero di crimini\r\n\r\n  constructor(private crimesService: CrimesService) { }\r\n\r\n  map!: L.Map;\r\n\r\n  ngOnInit(): void {\r\n    this.initMap();\r\n    this.loadData(); // Carica il file GeoJSON\r\n  }\r\n\r\n  // Funzione per inizializzare la mappa\r\n  initMap(): void {\r\n    this.map = L.map('map', {\r\n      center: [41.816813771373916, -87.60670812560372],  // Coordinate centrali per Chicago\r\n      zoom: 14\r\n    });\r\n\r\n    // Aggiungi il layer di base di OpenStreetMap\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n    }).addTo(this.map);\r\n  }\r\n\r\n  // Funzione per caricare i dati (crimini e distretti) da un file GeoJSON\r\n  loadData(): void {\r\n    this.crimesService.getCrimes().subscribe(\r\n      (data) => {\r\n        console.log('Dati GeoJSON ricevuti:', data);\r\n        //this.geojsonData = data;\r\n        \r\n        // Aggiungi i distretti e i crimini alla mappa\r\n        this.addDistrictsToMap(this.geojsonData);\r\n      },\r\n      (error) => {\r\n        console.error('Errore nel recupero dei dati:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Funzione per aggiungere i distretti con il numero di crimini alla mappa\r\n  addDistrictsToMap(data: any): void {\r\n  \r\n    L.geoJSON(data, {\r\n      style: {\r\n        color: 'blue',   // Border color\r\n        weight: 2,       // Border thickness\r\n        opacity: 1       // Border opacity\r\n      },\r\n      onEachFeature: (feature, layer) => {\r\n        // Check for the required properties to avoid undefined errors\r\n        const neighborhood = feature.properties?.pri_neigh || \"Unknown\";\r\n        const crimeCount = feature.properties?.crime_count || 0;\r\n        layer.bindPopup(`\r\n          <strong>${neighborhood}</strong><br/>\r\n          Crimini: ${crimeCount}`);\r\n      }\r\n    }).addTo(this.map); // Add to map\r\n  \r\n}\r\n}\r\n","<div id=\"map\" style=\"height: 500px;\"></div>"],"mappings":"AAEA,OAAO,KAAKA,CAAC,MAAM,SAAS,CAAC,CAAE;;;AAO/B,OAAM,MAAOC,YAAY;EA4RvBC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IA3RjC,KAAAC,WAAW,GAAE;MACX,MAAM,EAAE,mBAAmB;MAC3B,UAAU,EAAE,CACR;QACI,IAAI,EAAE,KAAK;QACX,MAAM,EAAE,SAAS;QACjB,YAAY,EAAE;UACV,WAAW,EAAE,cAAc;UAC3B,WAAW,EAAE,cAAc;UAC3B,YAAY,EAAE,eAAe;UAC7B,WAAW,EAAE,aAAa;UAC1B,aAAa,EAAE,CAAC;UAChB,aAAa,EAAE;SAClB;QACD,UAAU,EAAE;UACR,MAAM,EAAE,cAAc;UACtB,aAAa,EAAE,CACX,CACI,CACI,CACI,CAAC,iBAAiB,EAClB,gBAAgB,CACnB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,gBAAgB,EACjB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,gBAAgB,CACnB,EACD,CACI,CAAC,gBAAgB,EACjB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,kBAAkB,CACrB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,gBAAgB,CACnB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,kBAAkB,CACrB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,gBAAgB,EACjB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,kBAAkB,CACrB,EACD,CACI,CAAC,gBAAgB,EACjB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,kBAAkB,CACrB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,gBAAgB,CACnB,EACD,CACI,CAAC,iBAAiB,EAClB,kBAAkB,CACrB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,kBAAkB,CACrB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,gBAAgB,CACnB,EACD,CACI,CAAC,iBAAiB,EAClB,kBAAkB,CACrB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,gBAAgB,CACnB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,gBAAgB,EACjB,iBAAiB,CACpB,EACD,CACI,CAAC,eAAe,EAChB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,gBAAgB,CACnB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,CAAC,iBAAiB,EAClB,iBAAiB,CACpB,EACD,CACI,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}